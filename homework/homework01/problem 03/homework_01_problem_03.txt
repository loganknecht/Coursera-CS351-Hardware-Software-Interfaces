0000000100000e70 l       0e SECT   01 0000 [.text] _usage
0000000100000f00 l       0e SECT   01 0000 [.text] _get_num_val
0000000100000fd0 l       0e SECT   01 0000 [.text] _test_function
0000000100000b30 g       0f SECT   01 0000 [.text] _Signal
0000000100000000 g       0f SECT   01 0010 [.text] __mh_execute_header
0000000100000af0 g       0f SECT   01 0000 [.text] _addOK
0000000100000b00 g       0f SECT   01 0000 [.text] _bang
0000000100000a60 g       0f SECT   01 0000 [.text] _bitAnd
0000000100000a70 g       0f SECT   01 0000 [.text] _bitXor
0000000100000b10 g       0f SECT   01 0000 [.text] _conditional
00000001000016e0 g       0f SECT   01 0000 [.text] _f2u
0000000100000aa0 g       0f SECT   01 0000 [.text] _fitsBits
0000000100000ad0 g       0f SECT   01 0000 [.text] _getByte
0000000100000b20 g       0f SECT   01 0000 [.text] _isPower2
0000000100000ae0 g       0f SECT   01 0000 [.text] _logicalShift
0000000100000ba0 g       0f SECT   01 0000 [.text] _main
0000000100000ac0 g       0f SECT   01 0000 [.text] _sign
00000001000017b0 g       0f SECT   01 0000 [.text] _test_addOK
00000001000017d0 g       0f SECT   01 0000 [.text] _test_bang
00000001000016f0 g       0f SECT   01 0000 [.text] _test_bitAnd
0000000100001700 g       0f SECT   01 0000 [.text] _test_bitXor
00000001000017e0 g       0f SECT   01 0000 [.text] _test_conditional
0000000100001720 g       0f SECT   01 0000 [.text] _test_fitsBits
0000000100001770 g       0f SECT   01 0000 [.text] _test_getByte
00000001000017f0 g       0f SECT   01 0000 [.text] _test_isPower2
00000001000017a0 g       0f SECT   01 0000 [.text] _test_logicalShift
0000000100001750 g       0f SECT   01 0000 [.text] _test_sign
0000000100001710 g       0f SECT   01 0000 [.text] _test_thirdBits
0000000100000a90 g       0f SECT   01 0000 [.text] _thirdBits
0000000100000b80 g       0f SECT   01 0000 [.text] _timeout_handler
00000001000016d0 g       0f SECT   01 0000 [.text] _u2f
